"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const productCrud_1 = require("../../controllers/products/productCrud");
const authorization_1 = require("../../middleware/auth/authorization");
const multer_1 = __importDefault(require("multer"));
const storage = multer_1.default.memoryStorage();
const upload = (0, multer_1.default)({ storage });
const router = (0, express_1.Router)();
router.get("/products", productCrud_1.getProducts);
router.get("/products/category", productCrud_1.getAllProductsWithCategoryName);
router.get("/products/images", productCrud_1.getProductsWithImages);
router.get("/products/images/:productId", productCrud_1.getSingleProductWithImages);
router.get("/products/prod", productCrud_1.getProductById);
router.get("/products/:productId", productCrud_1.getSingleProductById);
router.post("/products/add", upload.single('product_image'), productCrud_1.addProduct);
router.put("/products/:productId", upload.single('product_image'), authorization_1.isAdminAuthenticat, productCrud_1.updateProduct);
router.delete("/products/:productId", productCrud_1.deleteProduct);
router.get('/products/:category_id', productCrud_1.getProductsByCategory);
router.get('/products/category/:category_name', productCrud_1.getProductsByCategory);
router.delete('/products/:productId/specifications/:specificationId', productCrud_1.removeProductSpecification);
router.get('/products/vendor/:vendorId', productCrud_1.getProductsByVendor);
exports.default = router;
